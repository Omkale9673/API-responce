// import 'package:flutter/material.dart';
// import 'package:google_maps_flutter/google_maps_flutter.dart';
// import 'package:google_maps_webservice/places.dart';
// import 'package:location/location.dart' as loc;
// import 'package:flutter_google_places/flutter_google_places.dart';
// import 'package:google_maps_webservice/places.dart' as gms_places;
// import 'package:http/http.dart' as http;
// import 'dart:convert';

// class MapScreen extends StatefulWidget {
//   const MapScreen({super.key});

//   @override
//   State<MapScreen> createState() => MapScreenState();
// }

// class MapScreenState extends State<MapScreen> {
//   late GoogleMapController mapController;
//   late loc.Location location;
//   LatLng? _currentPosition;
//   final String googleApiKey = 'AIzaSyBVn1idxtxfsovEZx8uUVc4NEp1pn9_FEE'; // Replace with your actual API key
//   final Set<Polyline> _polylines = {};
//   final List<LatLng> _routeCoords = [];
//   final gms_places.GoogleMapsPlaces _places = gms_places.GoogleMapsPlaces(apiKey: 'AIzaSyBVn1idxtxfsovEZx8uUVc4NEp1pn9_FEE'); // Replace with your actual API key

//   @override
//   void initState() {
//     super.initState();
//     location = loc.Location();
//     _getUserLocation();
//   }

//   Future<void> _getUserLocation() async {
//     bool serviceEnabled;
//     loc.PermissionStatus permissionGranted;

//     serviceEnabled = await location.serviceEnabled();
//     if (!serviceEnabled) {
//       serviceEnabled = await location.requestService();
//       if (!serviceEnabled) {
//         return;
//       }
//     }

//     permissionGranted = await location.hasPermission();
//     if (permissionGranted == loc.PermissionStatus.denied) {
//       permissionGranted = await location.requestPermission();
//       if (permissionGranted != loc.PermissionStatus.granted) {
//         return;
//       }
//     }

//     final userLocation = await location.getLocation();
//     setState(() {
//       _currentPosition = LatLng(userLocation.latitude!, userLocation.longitude!);
//     });
//   }

//   void _onMapCreated(GoogleMapController controller) {
//     mapController = controller;
//   }

//   Future<void> _searchPlace() async {
//     Prediction? p = await PlacesAutocomplete.show(
//       context: context,
//       apiKey: googleApiKey,
//       mode: Mode.overlay, // Mode.fullscreen
//       language: "en",
//       components: [Component(Component.country, "us")],
//     );

//     if (p != null) {
//       gms_places.PlacesDetailsResponse detail = await _places.getDetailsByPlaceId(p.placeId!);
//       final lat = detail.result.geometry!.location.lat;
//       final lng = detail.result.geometry!.location.lng;
//       final placeLocation = LatLng(lat, lng);

//       setState(() {
//         _drawRoute(_currentPosition!, placeLocation);
//       });

//       mapController.animateCamera(CameraUpdate.newLatLngZoom(placeLocation, 14.0));
//     }
//   }

//   Future<void> _drawRoute(LatLng from, LatLng to) async {
//     final directionsUrl = 'https://maps.googleapis.com/maps/api/directions/json?origin=${from.latitude},${from.longitude}&destination=${to.latitude},${to.longitude}&key=$googleApiKey';
//     final response = await http.get(Uri.parse(directionsUrl));
//     final data = json.decode(response.body);

//     if (data['status'] == 'OK') {
//       final route = data['routes'][0]['overview_polyline']['points'];
//       setState(() {
//         _routeCoords.clear();
//         _routeCoords.addAll(_decodePoly(route));
//         _polylines.add(Polyline(
//           polylineId: const PolylineId('route'),
//           points: _routeCoords,
//           width: 5,
//           color: Colors.blue,
//         ));
//       });
//     }
//   }

//   List<LatLng> _decodePoly(String poly) {
//     List<LatLng> polyPoints = [];
//     int index = 0, len = poly.length;
//     int lat = 0, lng = 0;

//     while (index < len) {
//       int b, shift = 0, result = 0;
//       do {
//         b = poly.codeUnitAt(index++) - 63;
//         result |= (b & 0x1F) << shift;
//         shift += 5;
//       } while (b >= 0x20);
//       int dlat = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));
//       lat += dlat;

//       shift = 0;
//       result = 0;
//       do {
//         b = poly.codeUnitAt(index++) - 63;
//         result |= (b & 0x1F) << shift;
//         shift += 5;
//       } while (b >= 0x20);
//       int dlng = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));
//       lng += dlng;

//       polyPoints.add(LatLng(lat / 1E5, lng / 1E5));
//     }

//     return polyPoints;
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: const Text(
//           'Google Maps',
//           style: TextStyle(color: Colors.white),
//         ),
//         backgroundColor: const Color.fromARGB(255, 30, 89, 108),
//         actions: [
//           IconButton(
//             icon: const Icon(Icons.search),
//             onPressed: _searchPlace,
//           ),
//         ],
//       ),
//       body: _currentPosition == null
//           ? const Center(child: CircularProgressIndicator())
//           : GoogleMap(
//               onMapCreated: _onMapCreated,
//               initialCameraPosition: CameraPosition(
//                 target: _currentPosition!,
//                 zoom: 14.0,
//               ),
//               markers: {
//                 if (_currentPosition != null)
//                   Marker(
//                     markerId: const MarkerId('userLocation'),
//                     position: _currentPosition!,
//                   ),
//               },
//               polylines: _polylines,
//             ),
//     );
//   }
// }
