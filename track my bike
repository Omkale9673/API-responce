import 'package:flutter/material.dart';
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:google_maps_flutter/google_maps_flutter.dart';

class FindMyVehicle extends StatefulWidget {
  final String sessionId;
  final String vehicleId;

  FindMyVehicle(
      {required this.sessionId,
      required this.vehicleId,
      Map<String, dynamic>? dashboardData});

  @override
  _FindMyVehicleState createState() => _FindMyVehicleState();
}

class _FindMyVehicleState extends State<FindMyVehicle> {
  Map<String, dynamic>? vehicleLocation;
  bool isLoading = true;
  final String googleApiKey = 'AIzaSyBVn1idxtxfsovEZx8uUVc4NEp1pn9_FEE';

  @override
  void initState() {
    super.initState();
    fetchVehicleLocation();
  }

  Future<void> fetchVehicleLocation() async {
    final response = await http.get(
      Uri.parse(
          'http://34.93.202.185:5000/api/v1/vehicle/find_my_vehicle?vehicle_id=${widget.vehicleId}&session=${widget.sessionId}'),
    );
    if (response.statusCode == 200) {
      final data = json.decode(response.body);
      setState(() {
        vehicleLocation = {
          'latitude': double.parse(data['data']['latitude'].toString()),
          'longitude': double.parse(data['data']['longitude'].toString()),
        };
        isLoading = false;
      });
    } else {
      setState(() {
        isLoading = false;
      });
      print('Failed to load location');
    }
  }

  Widget _buildDialogOption(
      String imagePath, String label, VoidCallback onTap, double width) {
    return GestureDetector(
      onTap: onTap,
      child: Column(
        children: [
          Image.asset(
            imagePath,
            width: width * 0.2,
          ),
          const SizedBox(height: 10),
          Text(
            label,
            style: const TextStyle(color: Colors.black),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    final screenHeight = MediaQuery.of(context).size.height;
    final screenWidth = MediaQuery.of(context).size.width;

    return Scaffold(
      body: Stack(
        children: [
          isLoading
              ? Center(child: CircularProgressIndicator())
              : vehicleLocation != null
                  ? VehicleMap(
                      latitude: vehicleLocation!['latitude'],
                      longitude: vehicleLocation!['longitude'],
                    )
                  : Center(child: Text('Location not found')),
          Positioned(
            top: screenHeight * 0.08,
            left: screenWidth * 0.07,
            child: GestureDetector(
              onTap: () {
                Navigator.of(context).pop();
              },
              child: Row(
                children: [
                  Icon(
                    Icons.arrow_back_ios,
                    color: Colors.black,
                    size: screenWidth * 0.05,
                  ),
                  SizedBox(width: screenWidth * 0.01),
                  Text(
                    'Back',
                    style: TextStyle(
                      fontFamily: 'Goldman',
                      fontSize: screenWidth * 0.045,
                      fontWeight: FontWeight.w700,
                      color: Colors.black,
                    ),
                  ),
                ],
              ),
            ),
          ),
          Positioned(
            bottom: screenHeight * 0.1,
            right: screenWidth * 0.05,
            child: Column(
              children: [
                FloatingActionButton(
                  onPressed: () {
                    // Implement your horn action here
                    print('Horn button pressed');
                  },
                  child: Icon(Icons.volume_up),
                  tooltip: 'Horn',
                ),
                SizedBox(height: screenHeight * 0.02),
                FloatingActionButton(
                  onPressed: () {
                    // Implement your lights action here
                    print('Lights button pressed');
                  },
                  child: Icon(Icons.lightbulb),
                  tooltip: 'Lights',
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class VehicleMap extends StatelessWidget {
  final double latitude;
  final double longitude;

  VehicleMap({required this.latitude, required this.longitude});

  @override
  Widget build(BuildContext context) {
    final LatLng vehicleLocation = LatLng(longitude, latitude);

    return GoogleMap(
      initialCameraPosition: CameraPosition(
        target: vehicleLocation,
        zoom: 14.0,
      ),
      markers: {
        Marker(
          markerId: MarkerId('vehicleLocation'),
          position: vehicleLocation,
        ),
      },
      onMapCreated: (GoogleMapController controller) {
        // You can set the map controller here if needed
      },
    );
  }
}
